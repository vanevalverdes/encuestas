# -*- coding: utf-8 -*-
from utils.db import db
from sqlalchemy.orm import backref
from sqlalchemy import BigInteger
from datetime import datetime, timezone 
from sqlalchemy import desc, func, String, case, literal_column  
from sqlalchemy.ext.hybrid import hybrid_property 
from sqlalchemy.sql.expression import null 

class Surveyoctobertwo(db.Model):
    __tablename__ = 'surveyoctobertwo'
    id = db.Column(db.Integer, primary_key=True)
    category = db.Column(db.String(255))
    gender = db.Column(db.String(255))
    age = db.Column(db.String(255))
    education = db.Column(db.String(255))
    religion = db.Column(db.String(255))
    county = db.Column(db.String(255))
    state = db.Column(db.String(255))
    party = db.Column(db.String(255))
    nationalElection = db.Column(db.String(255))
    congress = db.Column(db.String(255))
    ebais = db.Column(db.String(255))
    contact = db.Column(db.String(255))
    willvote = db.Column(db.String(255))
    createdby_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    modifiedby_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    createdby = db.relationship('User', backref='created_surveysOctoberTwo', foreign_keys=[createdby_id])
    modifiedby = db.relationship('User', backref='modified_surveysOctoberTwo', foreign_keys=[modifiedby_id])
    created_at = db.Column(db.DateTime, default=lambda: datetime.now(timezone.utc))
    updated_at = db.Column(db.DateTime, default=lambda: datetime.now(timezone.utc), onupdate=lambda: datetime.now(timezone.utc))


    @hybrid_property
    def full_repr(self):
        result = f''' {self.createdby_id if self.createdby_id is not None else ''}- {self.created_at if self.created_at is not None else ''}'''
        return result.strip()

    @full_repr.expression
    def full_repr(cls):
        return (
            literal_column("") + literal_column("' '")  + func.coalesce(cls.createdby_id, literal_column("''"))  + literal_column("'-'") + literal_column("' '")  + func.coalesce(cls.created_at, literal_column("''"))  + literal_column("''")
        )

    def __repr__(self) -> str:
        return self.full_repr 
    __default_ordering__ = [desc('created_at')]

    __table_args__ = {
        "mysql_charset": "utf8mb4",
        "mysql_collate": "utf8mb4_unicode_ci",
    }


def get_fields():
    fields = {'createdby_id': {'id': 14, 'type': 'createdby', 'name': 'createdby_id', 'maxlength': None, 'connected_table': None, 'label': 'Usuario', 'input': 'text', 'sort': None, 'required': False, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': None, 'extraclass': None, 'hasManyValues': False, 'readOnly': True, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'created_at': {'id': 15, 'type': 'creationDate', 'name': 'created_at', 'maxlength': None, 'connected_table': None, 'label': 'Fecha de Creación', 'input': 'text', 'sort': None, 'required': False, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': None, 'extraclass': None, 'hasManyValues': False, 'readOnly': True, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'category': {'id': 16, 'type': 'String', 'name': 'category', 'maxlength': None, 'connected_table': None, 'label': 'Categoría de Entrevista', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Acepta y califica para entrevista":"1",\r\n"Rechaza Entrevista":"2",\r\n"No se realiza (elegibilidad desconocida)":"3",\r\n"No elegible para entrevista":"4"\r\n}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'gender': {'id': 17, 'type': 'String', 'name': 'gender', 'maxlength': None, 'connected_table': None, 'label': 'Género', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Masculino":"A. Masculino", "Femenino":"B. Femenino"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'age': {'id': 18, 'type': 'String', 'name': 'age', 'maxlength': None, 'connected_table': None, 'label': 'Edad', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"18 -20 ":"18-20", "21 - 24":"21-24", "25 - 29":"25-29", "30 - 34":"30-34", "35 - 39":"35-39", "40 - 44":"40-44", "45 - 49":"45-49", "50 - 54":"50-54", "55 - 59":"55-59", "60 - 64":"60-64", "65 - 69":"65-69", "70 - 79":"70-79", "+ 80":"+80"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'education': {'id': 19, 'type': 'String', 'name': 'education', 'maxlength': None, 'connected_table': None, 'label': 'Educación', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Sin estudios":"Sin estudios", "Primaria":"Primaria", "Secundaria":"Secundaria", "Técnico":"Técnico", "Universitaria":"Universitaria", "NS/NR":"NS/NR"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'religion': {'id': 20, 'type': 'String', 'name': 'religion', 'maxlength': None, 'connected_table': None, 'label': 'Profesa alguna religión', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Católico":"Católico", "Cristiano / Evangélico (todas las demás)":"Cristiano / Evangélico (todas las demás)", "Ateo":"Ateo", "No religioso":"No religioso", "Otro":"Otro", "NS/NR":"NS/NR"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'county': {'id': 21, 'type': 'String', 'name': 'county', 'maxlength': None, 'connected_table': None, 'label': 'Cantón', 'input': 'text', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': None, 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'state': {'id': 22, 'type': 'String', 'name': 'state', 'maxlength': None, 'connected_table': None, 'label': 'Provincia', 'input': 'text', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': None, 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'party': {'id': 23, 'type': 'String', 'name': 'party', 'maxlength': None, 'connected_table': None, 'label': 'Cuál es el partido político de su preferencia? Presentar ficha ', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Partido Pueblo Soberano":"Partido Pueblo Soberano",\r\n"Nueva República":"Nueva República",\r\n"Partido Nueva Generación":"Partido Nueva Generación",\r\n"PLN":"PLN",\r\n"Unidos Podemos":"Unidos Podemos",\r\n"Partido Liberal Progresista":"Partido Liberal Progresista",\r\n"Frente Amplio":"Frente Amplio",\r\n"PAC":"PAC",\r\n"Esperanza Nacional":"Esperanza Nacional",\r\n"Partido Social Democrático":"Partido Social Democrático",\r\n"Partido Integración Nacional":"Partido Integración Nacional",\r\n"Avanza":"Avanza",\r\n"PUSC":"PUSC",\r\n"Aquí CR Manda":"Aquí CR Manda",\r\n"Partido Centro Social Democrático":"Partido Centro Social Democrático",\r\n"Partido Unión Costarricense Democrática":"Partido Unión Costarricense Democrática",\r\n"Partido Justicia Social Costarricense":"Partido Justicia Social Costarricense",\r\n"Costa Rica Primero":"Costa Rica Primero",\r\n"Partido de la Clase Trabajadora":"Partido de la Clase Trabajadora",\r\n"Partido Esperanza y Libertad":"Partido Esperanza y Libertad",\r\n"Otro":"Otro",\r\n"Ninguno":"Ninguno",\r\n"No Sabe":"No Sabe",\r\n"No Responde (Solo usar en caso de rechazar contestar)":"No Responde"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'nationalElection': {'id': 24, 'type': 'String', 'name': 'nationalElection', 'maxlength': None, 'connected_table': None, 'label': 'De la siguiente papeleta por quien votaría usted en las próximas elecciones para presidente', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{\r\n"Laura Fernández PPS":"Laura Fernández PPS",\r\n"Fabricio Alvarado NR":"Fabricio Alvarado NR",\r\n"Fernando Zamora PNG":"Fernando Zamora PNG",\r\n"Álvaro Ramos PLN":"Álvaro Ramos PLN",\r\n"Natalia Díaz UP":"Natalia Díaz UP",\r\n"Eliécer Feinzaig PLP":"Eliécer Feinzaig PLP",\r\n"Ariel Robles Frente Amplio":"Ariel Robles Frente Amplio",\r\n"Claudia Dobles Coalición Agenda Ciudadana":"Claudia Dobles Coalición Agenda Ciudadana",\r\n"Claudio Alpízar Esperanza Nacional":"Claudio Alpízar Esperanza Nacional",\r\n"Luz Mary Alpízar PSD":"Luz Mary Alpízar PSD",\r\n"José Aguilar Berrocal Avance":"José Aguilar Berrocal Avance",\r\n"Juan Carlos Hidalgo PUSC":"Juan Carlos Hidalgo PUSC",\r\n"Luis Amador PIN":"Luis Amador PIN",\r\n"Ronny Castillo ACRM":"Ronny Castillo ACRM",\r\n"Ana Virginia Calzada CDS":"Ana Virginia Calzada CDS",\r\n"Douglas Caamaño CR1":"Douglas Caamaño CR1",\r\n"Walter Rubén Hernández PJSC":"Walter Rubén Hernández PJSC",\r\n"Boris Molina UCD":"Boris Molina UCD",\r\n"Marco Rodríguez Padilla PEL":"Marco Rodríguez Padilla PEL",\r\n"David Hernández PT":"David Hernández PT",\r\n"Nulo":"Nulo",\r\n"En Blanco":"En blanco",\r\n"No Sabe":"No Sabe",\r\n"No Responde (Solo usar en caso de rechazar contestar)":"No Responde"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'congress': {'id': 25, 'type': 'String', 'name': 'congress', 'maxlength': None, 'connected_table': None, 'label': '7.   De la siguiente papeleta por quien votaría usted en las próximas elecciones para diputados?', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Partido Pueblo Soberano":"Partido Pueblo Soberano",\r\n"Nueva República":"Nueva República",\r\n"Partido Nueva Generación":"Partido Nueva Generación",\r\n"PLN":"PLN",\r\n"Unidos Podemos":"Unidos Podemos",\r\n"Partido Liberal Progresista":"Partido Liberal Progresista",\r\n"Frente Amplio":"Frente Amplio",\r\n"PAC":"PAC",\r\n"Esperanza Nacional":"Esperanza Nacional",\r\n"Partido Social Democrático":"Partido Social Democrático",\r\n"Partido Integración Nacional":"Partido Integración Nacional",\r\n"Avanza":"Avanza",\r\n"PUSC":"PUSC",\r\n"Aquí CR Manda":"Aquí CR Manda",\r\n"Partido Centro Social Democrático":"Partido Centro Social Democrático",\r\n"Partido Unión Costarricense Democrática":"Partido Unión Costarricense Democrática",\r\n"Partido Justicia Social Costarricense":"Partido Justicia Social Costarricense",\r\n"Costa Rica Primero":"Costa Rica Primero",\r\n"Partido de la Clase Trabajadora":"Partido de la Clase Trabajadora",\r\n"Partido Esperanza y Libertad":"Partido Esperanza y Libertad",\r\n"Otro":"Otro",\r\n"Nulo":"Nulo",\r\n"En Blanco":"En Blanco",\r\n"No Sabe":"No Sabe",\r\n"No Responde (Solo usar en caso de rechazar contestar)":"No Responde"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'ebais': {'id': 26, 'type': 'String', 'name': 'ebais', 'maxlength': None, 'connected_table': None, 'label': '8. Del 1 al 10 como valora el servicio que brinda el Ebais de\xa0su\xa0comunidad?', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{\r\n"1":"1",\r\n"2":"2",\r\n"3":"3",\r\n"4":"4",\r\n"5":"5",\r\n"6":"6",\r\n"7":"7",\r\n"8":"8",\r\n"9":"9",\r\n"10":"10"\r\n}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'contact': {'id': 27, 'type': 'String', 'name': 'contact', 'maxlength': None, 'connected_table': None, 'label': 'Contacto', 'input': 'text', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': None, 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}, 'willvote': {'id': 28, 'type': 'String', 'name': 'willvote', 'maxlength': None, 'connected_table': None, 'label': '¿Votará en las próximas elecciones nacionales 2026?', 'input': 'select', 'sort': None, 'required': True, 'hidden': False, 'publicBlob': False, 'default_value': None, 'select_options': '{"Sí":"Sí","No":"No"}', 'extraclass': None, 'hasManyValues': False, 'readOnly': False, 'calculate_file': None, 'calculate_function': None, 'helper': None}}
    return fields


def get_relevants():
    relevants = {}
    return relevants
