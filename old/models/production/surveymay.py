# -*- coding: utf-8 -*-
from utils.db import db
from datetime import datetime, timezone 
class Surveymay(db.Model):
    __tablename__ = 'surveymay'
    id = db.Column(db.Integer, primary_key=True)
    gender = db.Column(db.Text())
    age = db.Column(db.Text())
    state = db.Column(db.Text())
    studies = db.Column(db.Text())
    laboralCondition = db.Column(db.Text())
    nationalProblems = db.Column(db.Text())
    roadCR = db.Column(db.Text())
    optimist = db.Column(db.Text())
    religion = db.Column(db.Text())
    nataliaConoce = db.Column(db.Text())
    nataliaOpinion = db.Column(db.Text())
    conoceAlvaro = db.Column(db.Text())
    opinionAlvaro = db.Column(db.Text())
    conoceLaura = db.Column(db.Text())
    opinionLaura = db.Column(db.Text())
    conoceClaudia = db.Column(db.Text())
    opinionClaudia = db.Column(db.Text())
    conoceFabricio = db.Column(db.Text())
    opinionFabricio = db.Column(db.Text())
    conoceCarlos = db.Column(db.Text())
    opinionCarlos = db.Column(db.Text())
    conoceAriel = db.Column(db.Text())
    opinionAriel = db.Column(db.Text())
    conoceLuis = db.Column(db.Text())
    opinionLuis = db.Column(db.Text())
    conoceJuan = db.Column(db.Text())
    conoceEli = db.Column(db.Text())
    opinionEli = db.Column(db.Text())
    conoceRolando = db.Column(db.Text())
    opinionRolando = db.Column(db.Text())
    conoceJose = db.Column(db.Text())
    opinionJose = db.Column(db.Text())
    govermentSupport = db.Column(db.Text())
    chavesScale = db.Column(db.Text())
    asambleaOpinion = db.Column(db.Text())
    poderOpinion = db.Column(db.Text())
    cajaOpinion = db.Column(db.Text())
    mediosOpinion = db.Column(db.Text())
    universidadesOpinion = db.Column(db.Text())
    oijOpinion = db.Column(db.Text())
    fuerzaOpinion = db.Column(db.Text())
    contraloriaOpinion = db.Column(db.Text())
    ayaOpinion = db.Column(db.Text())
    lastElections = db.Column(db.Text())
    lastCandidate = db.Column(db.Text())
    voteScale = db.Column(db.Text())
    generalElections = db.Column(db.Text())
    secondNationalElections = db.Column(db.Text())
    party = db.Column(db.Text())
    personOrParty = db.Column(db.Text())
    nextGoverment = db.Column(db.Text())
    chavesCandidate = db.Column(db.Text())
    migration = db.Column(db.Text())
    education = db.Column(db.Text())
    health = db.Column(db.Text())
    cost = db.Column(db.Text())
    jobs = db.Column(db.Text())
    corrupt = db.Column(db.Text())
    trabajoCarceles = db.Column(db.Text())
    migrationDeport = db.Column(db.Text())
    finalcialEducation = db.Column(db.Text())
    independentWorkers = db.Column(db.Text())
    abort = db.Column(db.Text())
    childJudge = db.Column(db.Text())
    sexualGuides = db.Column(db.Text())
    mine = db.Column(db.Text())
    secularState = db.Column(db.Text())
    weed = db.Column(db.Text())
    sellInstitutions = db.Column(db.Text())
    phrases = db.Column(db.Text())
    aboutNatalia = db.Column(db.Text())
    aboutNataliaScale = db.Column(db.Text())
    whereAboutNatalia = db.Column(db.Text())
    wordAboutNatalia = db.Column(db.Text())
    presidentAboutNatalia = db.Column(db.Text())
    crimeCandidates = db.Column(db.Text())
    politicalMessage = db.Column(db.Text())
    supportReasons = db.Column(db.Text())
    recentlyNatalia = db.Column(db.Text())
    contact = db.Column(db.Text())
    opinionJuan = db.Column(db.Text())
    differentNatalia = db.Column(db.Text())
    otherCrime = db.Column(db.Text())
    otherSupport = db.Column(db.Text())
    chavesSupport = db.Column(db.Text())
    womanPresident = db.Column(db.Text())
    security = db.Column(db.Text())
    createdby_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    modifiedby_id = db.Column(db.Integer, db.ForeignKey('user.id'))
    createdby = db.relationship('User', backref='created_surveymays', foreign_keys=[createdby_id])
    modifiedby = db.relationship('User', backref='modified_surveymays', foreign_keys=[modifiedby_id])
    created_at = db.Column(db.DateTime, default=lambda: datetime.now(timezone.utc))
    updated_at = db.Column(db.DateTime, default=lambda: datetime.now(timezone.utc), onupdate=lambda: datetime.now(timezone.utc))
    def __repr__(self) -> str:
        return f" {self.id if self.id is not None else ''} - Encuestador {self.createdby_id if self.createdby_id is not None else ''} - {self.created_at if self.created_at is not None else ''}"

    __table_args__ = {
        "mysql_charset": "utf8mb4",
        "mysql_collate": "utf8mb4_unicode_ci",
    }
